application {
  config {
    applicationType monolith
    authenticationType jwt
    baseName store
    blueprints []
    buildTool gradle
    cacheProvider hazelcast
    clientFramework angularX
    clientPackageManager npm
    clientTheme none
    creationTimestamp 1600671237324
    databaseType sql
    devDatabaseType h2Disk
    dtoSuffix DTO
    embeddableLaunchScript false
    enableHibernateCache true
    enableSwaggerCodegen false
    enableTranslation true
    jhiPrefix jhi
    jhipsterVersion "6.10.1"
    jwtSecretKey "ZTFhZDdkNzk4NzhhMGZiNzkwOGVkMjA3YjQxMjMwNzExZmY5Y2E1MzRlYTg0ZDk3MDJmODEzZDdkZGIyNDAyNzI0ZTdkNzE3NzE0NGZhZWMxMTJjYjJhZjY1NDU2YmFkNWI4N2VkN2I4ZDY4ZDI5YmUwMTZiZTgxNzc3MzkwMTM="
    languages [en, es]
    messageBroker false
    nativeLanguage en
    otherModules []
    packageName com.afrikatek.store
    prodDatabaseType mysql
    searchEngine false
    serverPort 8080
    serviceDiscoveryType false
    skipClient false
    skipServer false
    skipUserManagement false
    testFrameworks [protractor]
    useSass true
    websocket false
  }

  entities Customer, Invoice, OrderItem, Product, ProductCategory, ProductOrder, Shipment
}

entity Customer {
  firstName String required,
  lastName String required,
  gender Gender required,
  email String required pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/),
  phone String required,
  addressLineOne String required,
  addressLineTwo String,
  city String required,
  country String required
}
entity Invoice {
  date Instant required,
  details String,
  status InvoiceStatus required,
  paymentMethod PaymentMethod required,
  paymentDate Instant required,
  paymentAmount BigDecimal required,
  code String required
}
entity OrderItem {
  quantity Integer required min(0),
  totalPrice BigDecimal required min(0),
  status OrderItemStatus required
}
/**
 * Product by Afrikatek Online STore
 */
entity Product {
  name String required,
  description String,
  price BigDecimal required min(0),
  size Size required,
  image ImageBlob
}
entity ProductCategory {
  name String required,
  description String
}
entity ProductOrder {
  placedDate Instant required,
  status OrderStatus required,
  code String required
}
entity Shipment {
  trackingCode String,
  date Instant required,
  details String
}
enum Gender {
  MALE,
  FEMALE,
  OTHER
}
enum InvoiceStatus {
  PAID,
  ISSUED,
  CANCELLED
}
enum PaymentMethod {
  CREDIT_CARD,
  CASH_ON_DELIVERY,
  PAYPAL
}
enum OrderItemStatus {
  AVALIABLE,
  OUT_OF_STOCK,
  BACK_ORDER
}
enum Size {
  S,
  M,
  XL,
  XXL
}
enum OrderStatus {
  COMPLETED,
  PENDING,
  CANCELLED
}

relationship OneToOne {
  Customer{user(login) required} to User
}
relationship OneToMany {
  ProductOrder{invoice} to Invoice{order(code) required},
  ProductOrder{orderItem} to OrderItem{order(code) required},
  ProductCategory{product} to Product{productCategory(name)},
  Customer{order} to ProductOrder{customer(email) required},
  Invoice{shipment} to Shipment{invoice(code) required}
}
relationship ManyToOne {
  OrderItem{product(name) required} to Product
}

paginate Customer, Invoice, OrderItem, Product, ProductOrder, Shipment with pagination
service Customer, Invoice, OrderItem, Product, ProductCategory, ProductOrder, Shipment with serviceClass
